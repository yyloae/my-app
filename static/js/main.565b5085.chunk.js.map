{"version":3,"sources":["services/util.js","services/shelf/actions.js","component/Spinner/index.js","component/Selectbox/index.js","component/Shelf/Sort/index.js","services/sort/actions.js","services/sort/actionTypes.js","component/Shelf/ShelfHeader/index.js","component/Shelf/ProductList/Product/index.js","services/cart/actions.js","services/cart/actionTypes.js","component/Shelf/ProductList/index.js","component/Shelf/index.js","services/shelf/actionTypes.js","component/Checkbox/index.js","component/Shelf/Filter/index.js","services/filters/actions.js","services/filters/actionTypes.js","component/FloatCart/CartProduct/index.js","component/FloatCart/index.js","services/total/actions.js","services/total/actionTypes.js","App.js","serviceWorker.js","services/shelf/reducer.js","services/cart/reducer.js","services/total/reducer.js","services/filters/reducer.js","services/sort/reducer.js","services/reducers.js","services/store.js","Root.js","index.js"],"names":["formatPrice","x","currency","toFixed","replace","compare","lowestprice","a","b","price","highestprice","className","Selectbox","options","classes","handleOnChange","onChange","e","target","value","map","o","key","label","createOptions","sortBy","connect","state","sort","type","updateSort","payload","ShelfHeader","props","productsLength","addProduct","product","quantity","productInstallment","formattedPrice","currencyId","installments","installmentPrice","currencyFormat","onClick","data-sku","sku","isFreeShipping","title","substr","length","ProductList","products","p","id","Shelf","isLoading","handleFetchProducts","filters","setState","fetchProducts","this","nextProps","nextFilters","nextSort","undefined","Fragment","Spinner","Component","shelf","items","callback","dispatch","axios","get","then","res","data","filter","find","f","availableSizes","size","catch","err","console","log","Checkbox","isChecked","toggleCheckboxChange","handleCheckboxChange","checked","Filter","toggleCheckbox","selectedCheckboxes","has","delete","add","updateFilters","Array","from","createCheckbox","createCheckboxes","Set","CartProduct","handleMouseOver","isMouseOver","handleMouseOut","handleOnIncrease","changeProductQuantity","handleOnDecrease","removeProduct","push","join","onMouseOver","onMouseOut","style","disabled","FloatCart","isOpen","openFloatCart","closeFloatCart","cartProducts","updateCart","productAlreadyInCart","forEach","cp","index","findIndex","splice","proceedToCheckout","cartTotal","totalPrice","productQuantity","alert","changedProduct","newProduct","productToRemove","productToChange","cart","productToAdd","total","loadCart","reduce","sum","installmenets","greater","App","Boolean","window","location","hostname","match","initialState","initalState","combineReducers","action","Object","assign","JSON","parse","localStorage","getItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","subscribe","getState","persist","setItem","stringify","Root","children","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.565b5085.chunk.js","sourcesContent":["export const formatPrice = (x, currency) => {\r\n  switch (currency) {\r\n    case \"BRL\":\r\n      return x.toFixed(2).replace(\".\", \",\");\r\n    default:\r\n      return x.toFixed(2);\r\n  }\r\n};\r\n\r\nexport const productsAPI =\r\n  \"https://react-shopping-cart-67954.firebaseio.com/products.json\";\r\n","import { FETCH_PRODUCTS } from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nimport { productsAPI } from \"../util\";\r\n\r\nconst compare = {\r\n  lowestprice: (a, b) => {\r\n    if (a.price < b.price) return -1;\r\n    if (a.price > b.price) return 1;\r\n    return 0;\r\n  },\r\n  highestprice: (a, b) => {\r\n    if (a.price < b.price) return -1;\r\n    if (a.price > b.price) return 1;\r\n    return 0;\r\n  }\r\n};\r\n\r\nexport const fetchProducts = (filters, sortBy, callback) => dispatch => {\r\n  return axios\r\n    .get(productsAPI)\r\n    .then(res => {\r\n      let { products } = res.data;\r\n\r\n      if (!!filters && filters.length > 0) {\r\n        products = products.filter(p =>\r\n          filters.find(f => p.availableSizes.find(size => size === f))\r\n        );\r\n      }\r\n\r\n      if (!!sortBy) {\r\n        products = products.sort(compare[sortBy]);\r\n      }\r\n\r\n      if (!!callback) {\r\n        callback();\r\n      }\r\n\r\n      return dispatch({\r\n        type: FETCH_PRODUCTS,\r\n        payload: products\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(\"Could not fetch products. Try again later.\");\r\n    });\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nexport default () => (\r\n  <div className=\"spinner lds-ring\">\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Selectbox = ({ options, classes, handleOnChange }) => {\r\n  const createOptions = options =>\r\n    options.map(o => (\r\n      <option value={o.value} key={o.value}>\r\n        {o.label}\r\n      </option>\r\n    ));\r\n\r\n  return (\r\n    <select onChange={e => handleOnChange(e.target.value)} className={classes}>\r\n      {createOptions(options)}\r\n    </select>\r\n  );\r\n};\r\n\r\nSelectbox.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  classes: PropTypes.string,\r\n  handleOnChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Selectbox;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { updateSort } from \"../../../services/sort/actions\";\r\nimport Selectbox from \"../../Selectbox\";\r\n\r\nconst sortBy = [\r\n  { value: \"\", label: \"Select\" },\r\n  { value: \"lowestprice\", label: \"Lowest to highest\" },\r\n  { value: \"highestprice\", label: \"Highest to lowest\" }\r\n];\r\n\r\nconst Sort = ({ updateSort, sort }) => (\r\n  <div className=\"sort\">\r\n    Order by\r\n    <Selectbox options={sortBy} handleOnChange={value => updateSort(value)} />\r\n  </div>\r\n);\r\n\r\nSort.propTypes = {\r\n  updateSort: PropTypes.func.isRequired,\r\n  sort: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  sort: state.sort.type\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateSort })(Sort);\r\n","import { UPDATE_SORT } from \"./actionTypes\";\r\n\r\nexport const updateSort = sort => ({\r\n  type: UPDATE_SORT,\r\n  payload: sort\r\n});\r\n","export const UPDATE_SORT = \"UPDATE_SORT\";\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Sort from \"../Sort\";\r\n\r\nconst ShelfHeader = props => {\r\n  return (\r\n    <div className=\"shelf-container-header\">\r\n      <small className=\"products-found\">\r\n        <span>{props.productsLength} Product(s) found.</span>\r\n      </small>\r\n      <Sort />\r\n    </div>\r\n  );\r\n};\r\n\r\nShelfHeader.propTypes = {\r\n  productsLength: PropTypes.number.isRequired\r\n};\r\n\r\nexport default ShelfHeader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// import Thumb from \"../../../Thumb\";\r\nimport { formatPrice } from \"../../../../services/util\";\r\nimport { addProduct } from \"../../../../services/cart/actions\";\r\n\r\nconst Product = ({ product, addProduct }) => {\r\n  product.quantity = 1;\r\n\r\n  let formattedPrice = formatPrice(product.price, product.currencyId);\r\n\r\n  let productInstallment;\r\n\r\n  if (!!product.installments) {\r\n    const installmentPrice = product.price / product.installments;\r\n\r\n    productInstallment = (\r\n      <div className=\"installment\">\r\n        <span>or {product.installments} x</span>\r\n        <b>\r\n          {product.currencyFormat}\r\n          {formatPrice(installmentPrice, product.currencyId)}\r\n        </b>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"shelf-item\"\r\n      onClick={() => addProduct(product)}\r\n      data-sku={product.sku}\r\n    >\r\n      {product.isFreeShipping && (\r\n        <div className=\"shelf-stopper\">Free shipping</div>\r\n      )}\r\n      {/* <Thumb\r\n        classes=\"shelf-item__thumb\"\r\n        src={require(`../../../../static/products/${product.sku}_1.jpg`)}\r\n        alt={product.title}\r\n      /> */}\r\n      <p className=\"shelf-item__title\">{product.title}</p>\r\n      <div className=\"shelf-item__price\">\r\n        <div className=\"val\">\r\n          <small>{product.currencyFormat}</small>\r\n          <b>{formattedPrice.substr(0, formattedPrice.length - 3)}</b>\r\n          <span>{formattedPrice.substr(formattedPrice.length - 3, 3)}</span>\r\n        </div>\r\n        {productInstallment}\r\n      </div>\r\n      <div className=\"shelf-item__buy-btn\">Add to cart</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProduct.propTypes = {\r\n  product: PropTypes.object.isRequired,\r\n  addProduct: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addProduct })(Product);\r\n","import {\r\n  LOAD_CART,\r\n  ADD_PRODUCT,\r\n  REMOVE_PRODUCT,\r\n  CHANGE_PRODUCT_QUANTITY\r\n} from \"./actionTypes\";\r\n\r\nexport const loadCart = products => ({\r\n  type: LOAD_CART,\r\n  payload: products\r\n});\r\n\r\nexport const addProduct = product => ({\r\n  type: ADD_PRODUCT,\r\n  payload: product\r\n});\r\n\r\nexport const removeProduct = product => ({\r\n  type: REMOVE_PRODUCT,\r\n  payload: product\r\n});\r\n\r\nexport const changeProductQuantity = product => ({\r\n  type: CHANGE_PRODUCT_QUANTITY,\r\n  payload: product\r\n});\r\n","export const LOAD_CART = \"LOAD_CART\";\r\nexport const ADD_PRODUCT = \"ADD_PRODUCT\";\r\nexport const REMOVE_PRODUCT = \"REMOVE_PRODUCT\";\r\nexport const CHANGE_PRODUCT_QUANTITY = \"CHANGE_PRODUCT_QUANTITY\";\r\nexport const UPDATE_CART = \"UPDATE_CART\";\r\n","import React from \"react\";\r\n\r\nimport Product from \"./Product\";\r\n\r\nconst ProductList = ({ products }) => {\r\n  return products.map(p => {\r\n    return <Product product={p} key={p.id} />;\r\n  });\r\n};\r\n\r\nexport default ProductList;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchProducts } from \"../../services/shelf/actions\";\r\n\r\nimport Spinner from \"../Spinner\";\r\nimport ShelfHeader from \"./ShelfHeader\";\r\nimport ProductList from \"./ProductList\";\r\n\r\nimport \"./style.scss\";\r\n\r\nclass Shelf extends Component {\r\n  static propTypes = {\r\n    fetchProducts: PropTypes.func.isRequired,\r\n    products: PropTypes.array.isRequired,\r\n    filters: PropTypes.array,\r\n    sort: PropTypes.string\r\n  };\r\n\r\n  state = {\r\n    isLoading: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handleFetchProducts();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { filters: nextFilters, sort: nextSort } = nextProps;\r\n    const { filters } = this.props;\r\n    if (nextFilters.length !== filters.length) {\r\n      this.handleFetchProducts(nextFilters, undefined);\r\n    }\r\n\r\n    if (nextSort !== this.props.sort) {\r\n      this.handleFetchProducts(undefined, nextSort);\r\n    }\r\n  }\r\n\r\n  handleFetchProducts = (\r\n    filters = this.props.filters,\r\n    sort = this.props.sort\r\n  ) => {\r\n    this.setState({ isLoading: true });\r\n    this.props.fetchProducts(filters, sort, () => {\r\n      this.setState({ isLoading: false });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { products } = this.props;\r\n    const { isLoading } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {isLoading && <Spinner />}\r\n        <div className=\"shelf-container\">\r\n          <ShelfHeader productsLength={products.length} />\r\n          <ProductList products={products} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  products: state.shelf.products,\r\n  filters: state.filters.items,\r\n  sort: state.sort.type\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchProducts })(Shelf);\r\n","export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Checkbox extends Component {\r\n  static propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    handleCheckboxChange: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    isChecked: false\r\n  };\r\n\r\n  toggleCheckboxChange = () => {\r\n    const { handleCheckboxChange, label } = this.props;\r\n\r\n    this.setState(({ isChecked }) => ({\r\n      isChecked: !isChecked\r\n    }));\r\n\r\n    handleCheckboxChange(label);\r\n  };\r\n\r\n  render() {\r\n    const { label, classes } = this.props;\r\n    const { isChecked } = this.state;\r\n\r\n    return (\r\n      <div className={classes}>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            value={label}\r\n            checked={isChecked}\r\n            onChange={this.toggleCheckboxChange}\r\n          />\r\n\r\n          <span className=\"checkmark\">{label}</span>\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkbox;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { updateFilters } from \"../../../services/filters/actions\";\r\nimport Checkbox from \"../../Checkbox\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst availableSizes = [\"XS\", \"S\", \"M\", \"ML\", \"L\", \"XL\", \"XXL\"];\r\n\r\nclass Filter extends Component {\r\n  static propTypes = {\r\n    updateFilters: PropTypes.func.isRequired,\r\n    filters: PropTypes.array\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n\r\n  toggleCheckbox = label => {\r\n    if (this.selectedCheckboxes.has(label)) {\r\n      this.selectedCheckboxes.delete(label);\r\n    } else {\r\n      this.selectedCheckboxes.add(label);\r\n    }\r\n\r\n    this.props.updateFilters(Array.from(this.selectedCheckboxes));\r\n  };\r\n\r\n  createCheckbox = label => (\r\n    <Checkbox\r\n      classes=\"filters-available-size\"\r\n      label={label}\r\n      handleCheckboxChange={this.toggleCheckbox}\r\n      key={label}\r\n    />\r\n  );\r\n\r\n  createCheckboxes = () => availableSizes.map(this.createCheckbox);\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"filters\">\r\n        <h4 className=\"title\">Sizes:</h4>\r\n        {this.createCheckboxes()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { updateFilters }\r\n)(Filter);\r\n","import { UPDATE_FILTER } from \"./actionTypes\";\r\n\r\nexport const updateFilters = filters => ({\r\n  type: UPDATE_FILTER,\r\n  payload: filters\r\n});\r\n","export const UPDATE_FILTER = \"UPDATE_FILTER\";\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// import Thumb from \"./../../Thumb\";\r\nimport { formatPrice } from \"../../../services/util\";\r\n\r\nclass CartProduct extends Component {\r\n  static propTypes = {\r\n    product: PropTypes.object.isRequired,\r\n    removeProduct: PropTypes.func.isRequired,\r\n    changeProductQuantity: PropTypes.func.isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      product: this.props.product,\r\n      isMouseOver: false\r\n    };\r\n  }\r\n\r\n  handleMouseOver = () => {\r\n    this.setState({ isMouseOver: true });\r\n  };\r\n\r\n  handleMouseOut = () => {\r\n    this.setState({ isMouseOver: false });\r\n  };\r\n\r\n  handleOnIncrease = () => {\r\n    const { changeProductQuantity } = this.props;\r\n    const { product } = this.state;\r\n    product.quantity = product.quantity + 1;\r\n    changeProductQuantity(product);\r\n  };\r\n\r\n  handleOnDecrease = () => {\r\n    const { changeProductQuantity } = this.props;\r\n    const { product } = this.state;\r\n    product.quantity = product.quantity - 1;\r\n    changeProductQuantity(product);\r\n  };\r\n\r\n  render() {\r\n    const { removeProduct } = this.props;\r\n    const { product } = this.state;\r\n\r\n    const classes = [\"shelf-item\"];\r\n\r\n    if (!!this.state.isMouseOver) {\r\n      classes.push(\"shelf-item--mouseover\");\r\n    }\r\n\r\n    return (\r\n      <div className={classes.join(\" \")}>\r\n        <div\r\n          className=\"shelf-item__del\"\r\n          onMouseOver={() => this.handleMouseOver()}\r\n          onMouseOut={() => this.handleMouseOut()}\r\n          onClick={() => removeProduct(product)}\r\n        />\r\n        {/* <Thumb\r\n          classes=\"shelf-item__thumb\"\r\n          src={require(`../../../static/products/${product.sku}_2.jpg`)}\r\n          alt={product.title}\r\n        /> */}\r\n        <div className=\"shelf-item__details\">\r\n          <p className=\"title\">{product.title}</p>\r\n          <p className=\"desc\">\r\n            {`${product.availableSizes[0]} | ${product.style}`} <br />\r\n            Quantity: {product.quantity}\r\n          </p>\r\n        </div>\r\n        <div className=\"shelf-item__price\">\r\n          <p>{`${product.currencyFormat}  ${formatPrice(product.price)}`}</p>\r\n          <div>\r\n            <button\r\n              onClick={this.handleOnDecrease}\r\n              disabled={product.quantity === 1 ? true : false}\r\n              className=\"change-product-button\"\r\n            >\r\n              -\r\n            </button>\r\n            <button\r\n              onClick={this.handleOnIncrease}\r\n              className=\"change-product-button\"\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CartProduct;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  loadCart,\r\n  removeProduct,\r\n  changeProductQuantity\r\n} from \"../../services/cart/actions\";\r\nimport { updateCart } from \"../../services/total/actions\";\r\nimport CartProduct from \"./CartProduct\";\r\nimport { formatPrice } from \"../../services/util\";\r\n\r\nimport \"./style.scss\";\r\n\r\nclass FloatCart extends Component {\r\n  static propTypes = {\r\n    loadCart: PropTypes.func.isRequired,\r\n    updateCart: PropTypes.func.isRequired,\r\n    cartProducts: PropTypes.array.isRequired,\r\n    newProduct: PropTypes.object,\r\n    removeProduct: PropTypes.func,\r\n    productToRemove: PropTypes.object,\r\n    changeProductQuantity: PropTypes.func,\r\n    productToChange: PropTypes.object\r\n  };\r\n\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.newProduct !== this.props.newProduct) {\r\n      this.addProduct(nextProps.newProduct);\r\n    }\r\n\r\n    if (nextProps.productToRemove !== this.props.productToRemove) {\r\n      this.removeProduct(nextProps.productToRemove);\r\n    }\r\n\r\n    if (nextProps.productToChange !== this.props.productToChange) {\r\n      this.changeProductQuantity(nextProps.productToChange);\r\n    }\r\n  }\r\n\r\n  openFloatCart = () => {\r\n    this.setState({ isOpen: true });\r\n  };\r\n\r\n  closeFloatCart = () => {\r\n    this.setState({ isOpen: false });\r\n  };\r\n\r\n  addProduct = product => {\r\n    const { cartProducts, updateCart } = this.props;\r\n    let productAlreadyInCart = false;\r\n\r\n    cartProducts.forEach(cp => {\r\n      if (cp.id === product.id) {\r\n        cp.quantity += product.quantity;\r\n        productAlreadyInCart = true;\r\n      }\r\n    });\r\n\r\n    if (!productAlreadyInCart) {\r\n      cartProducts.push(product);\r\n    }\r\n\r\n    updateCart(cartProducts);\r\n    this.openFloatCart();\r\n  };\r\n\r\n  removeProduct = product => {\r\n    const { cartProducts, updateCart } = this.props;\r\n\r\n    const index = cartProducts.findIndex(p => p.id === product.id);\r\n    if (index >= 0) {\r\n      cartProducts.splice(index, 1);\r\n      updateCart(cartProducts);\r\n    }\r\n  };\r\n\r\n  proceedToCheckout = () => {\r\n    const {\r\n      totalPrice,\r\n      productQuantity,\r\n      currencyFormat,\r\n      currencyId\r\n    } = this.props.cartTotal;\r\n\r\n    if (!productQuantity) {\r\n      alert(\"Add some product in the cart!\");\r\n    } else {\r\n      alert(\r\n        `Checkout - Subtotal: ${currencyFormat} ${formatPrice(\r\n          totalPrice,\r\n          currencyId\r\n        )}`\r\n      );\r\n    }\r\n  };\r\n\r\n  changeProductQuantity = changedProduct => {\r\n    const { cartProducts, updateCart } = this.props;\r\n\r\n    const product = cartProducts.find(p => p.id === changedProduct.id);\r\n    product.quantity = changedProduct.quantity;\r\n    if (product.quantity <= 0) {\r\n      this.removeProduct(product);\r\n    }\r\n    updateCart(cartProducts);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      cartTotal,\r\n      cartProducts,\r\n      removeProduct,\r\n      changeProductQuantity\r\n    } = this.props;\r\n\r\n    const products = cartProducts.map(p => {\r\n      return (\r\n        <CartProduct\r\n          product={p}\r\n          removeProduct={removeProduct}\r\n          changeProductQuantity={changeProductQuantity}\r\n          key={p.id}\r\n        />\r\n      );\r\n    });\r\n\r\n    let classes = [\"float-cart\"];\r\n\r\n    if (!!this.state.isOpen) {\r\n      classes.push(\"float-cart--open\");\r\n    }\r\n\r\n    return (\r\n      <div className={classes.join(\" \")}>\r\n        {/* If cart open, show close (x) button */}\r\n        {this.state.isOpen && (\r\n          <div\r\n            onClick={() => this.closeFloatCart()}\r\n            className=\"float-cart__close-btn\"\r\n          >\r\n            X\r\n          </div>\r\n        )}\r\n\r\n        {/* If cart is closed, show bag with quantity of product and open cart action */}\r\n        {!this.state.isOpen && (\r\n          <span\r\n            onClick={() => this.openFloatCart()}\r\n            className=\"bag bag--float-cart-closed\"\r\n          >\r\n            <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\r\n          </span>\r\n        )}\r\n\r\n        <div className=\"float-cart__content\">\r\n          <div className=\"float-cart__header\">\r\n            <span className=\"bag\">\r\n              <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\r\n            </span>\r\n            <span className=\"header-title\">Cart</span>\r\n          </div>\r\n\r\n          <div className=\"float-cart__shelf-container\">\r\n            {products}\r\n            {!products.length && (\r\n              <p className=\"shelf-empty\">\r\n                Add some products in the cart <br />\r\n                :)\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"float-cart__footer\">\r\n            <div className=\"sub\">SUBTOTAL</div>\r\n            <div className=\"sub-price\">\r\n              <p className=\"sub-price__val\">\r\n                {`${cartTotal.currencyFormat} ${formatPrice(\r\n                  cartTotal.totalPrice,\r\n                  cartTotal.currencyId\r\n                )}`}\r\n              </p>\r\n              <small className=\"sub-price__installment\">\r\n                {!!cartTotal.installments && (\r\n                  <span>\r\n                    {`OR UP TO ${cartTotal.installments} x ${\r\n                      cartTotal.currencyFormat\r\n                    } ${formatPrice(\r\n                      cartTotal.totalPrice / cartTotal.installments,\r\n                      cartTotal.currencyId\r\n                    )}`}\r\n                  </span>\r\n                )}\r\n              </small>\r\n            </div>\r\n            <div onClick={() => this.proceedToCheckout()} className=\"buy-btn\">\r\n              Checkout\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  cartProducts: state.cart.products,\r\n  newProduct: state.cart.productToAdd,\r\n  productToRemove: state.cart.productToRemove,\r\n  productToChange: state.cart.productToChange,\r\n  cartTotal: state.total.data\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  loadCart,\r\n  updateCart,\r\n  removeProduct,\r\n  changeProductQuantity\r\n})(FloatCart);\r\n","import { UPDATE_CART } from \"./actionTypes\";\r\n\r\nexport const updateCart = cartProducts => dispatch => {\r\n  let productQuantity = cartProducts.reduce((sum, p) => {\r\n    sum += p.quantity;\r\n    return sum;\r\n  }, 0);\r\n\r\n  let totalPrice = cartProducts.reduce((sum, p) => {\r\n    sum += p.price * p.quantity;\r\n    return sum;\r\n  }, 0);\r\n\r\n  let installmenets = cartProducts.reduce((greater, p) => {\r\n    greater = p.installmenets > greater ? p.installmenets : greater;\r\n    return greater;\r\n  }, 0);\r\n\r\n  let cartTotal = {\r\n    productQuantity,\r\n    installmenets,\r\n    totalPrice,\r\n    currencyId: \"USD\",\r\n    currencyFormat: \"$\"\r\n  };\r\n\r\n  dispatch({\r\n    type: UPDATE_CART,\r\n    payload: cartTotal\r\n  });\r\n};\r\n","export const UPDATE_CART = \"UPDATE_CART\";\r\n","import React from \"react\";\n\nimport Shelf from \"./component/Shelf\";\nimport Filter from \"./component/Shelf/Filter\";\nimport FloatCart from \"./component/FloatCart\";\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <main>\n        <Filter />\n        <Shelf />\n      </main>\n      <FloatCart />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { FETCH_PRODUCTS } from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  products: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  LOAD_CART,\r\n  ADD_PRODUCT,\r\n  REMOVE_PRODUCT,\r\n  CHANGE_PRODUCT_QUANTITY\r\n} from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  products: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_CART:\r\n      return {\r\n        ...state,\r\n        products: action.payload\r\n      };\r\n    case ADD_PRODUCT:\r\n      return {\r\n        ...state,\r\n        productToAdd: Object.assign({}, action.payload)\r\n      };\r\n    case REMOVE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        productToRemove: Object.assign({}, action.payload)\r\n      };\r\n    case CHANGE_PRODUCT_QUANTITY:\r\n      return {\r\n        ...state,\r\n        productToChange: Object.assign({}, action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { UPDATE_CART } from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  data: {\r\n    productQuantity: 0,\r\n    installments: 0,\r\n    totalPrice: 0,\r\n    currencyId: \"USD\",\r\n    currencyFormat: \"$\"\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_CART:\r\n      return {\r\n        ...state,\r\n        data: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { UPDATE_FILTER } from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  items: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_FILTER:\r\n      return {\r\n        ...state,\r\n        items: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { UPDATE_SORT } from \"./actionTypes\";\r\n\r\nconst initalState = {\r\n  type: \"\"\r\n};\r\n\r\nexport default function(state = initalState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_SORT:\r\n      return {\r\n        ...state,\r\n        type: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport shelfReducer from \"./shelf/reducer\";\r\nimport cartReducer from \"./cart/reducer\";\r\nimport totalReducer from \"./total/reducer\";\r\nimport filtersReducer from \"./filters/reducer\";\r\nimport sortReducer from \"./sort/reducer\";\r\n\r\nexport default combineReducers({\r\n  shelf: shelfReducer,\r\n  cart: cartReducer,\r\n  total: totalReducer,\r\n  filters: filtersReducer,\r\n  sort: sortReducer\r\n});\r\n","import { compose, createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default initialState => {\r\n  initialState =\r\n    JSON.parse(window.localStorage.getItem(\"state\")) || initialState;\r\n  const middleware = [thunk];\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n\r\n  store.subscribe(() => {\r\n    const state = store.getState();\r\n    const persist = {\r\n      cart: state.cart,\r\n      total: state.total\r\n    };\r\n\r\n    window.localStorage.setItem(\"state\", JSON.stringify(persist));\r\n  });\r\n\r\n  return store;\r\n};\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport store from \"./services/store\";\r\n\r\nconst Root = ({ children, initialState = {} }) => (\r\n  <Provider store={store(initialState)}>{children}</Provider>\r\n);\r\n\r\nexport default Root;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Root from \"./Root\";\n\nReactDOM.render(\n  <Root>\n    <App />\n  </Root>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}